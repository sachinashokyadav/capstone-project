pipeline {
    agent any

    environment {
        AWS_REGION = "ap-south-1"
        AWS_ACCOUNT_ID = "688372068524"
        ECR_REPO = "capstoneproject/docker-images"
        ECR_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/sachinashokyadav/capstone-project.git'
            }
        }

        stage('Login to AWS ECR') {
            steps {
                script {
                    withAWS(region: "${AWS_REGION}", credentials: 'aws-credentials') {
                        sh '''
                            echo "Logging in to AWS ECR..."
                            aws ecr get-login-password --region ${AWS_REGION} | \
                            docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
                        '''
                    }
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    GIT_COMMIT = sh(returnStdout: true, script: "git rev-parse --short HEAD").trim()

                    sh '''
                        echo "Building backend and frontend Docker images..."
                        cd Application-Code/backend
                        docker build -t ${ECR_URI}:backend-${GIT_COMMIT} .

                        cd ../frontend
                        docker build -t ${ECR_URI}:frontend-${GIT_COMMIT} .
                    '''
                }
            }
        }

        stage('Push Docker Images to ECR') {
            steps {
                script {
                    sh '''
                        echo "Pushing images to AWS ECR..."
                        docker push ${ECR_URI}:backend-${GIT_COMMIT}
                        docker push ${ECR_URI}:frontend-${GIT_COMMIT}
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "✅ Successfully built and pushed images to ECR: ${ECR_URI}"
        }
        failure {
            echo "❌ Build failed! Check Jenkins console for details."
        }
    }
}
