pipeline {
    agent any

    environment {
        AWS_REGION      = "ap-south-1"
        AWS_ACCOUNT_ID  = "688372068524"
        ECR_REPO        = "capstoneproject/docker-images"
        ECR_URI         = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}"
        NAMESPACE       = "capstone"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/sachinashokyadav/capstone-project.git'
            }
        }

        stage('Configure AWS Auth') {
            steps {
                withAWS(region: "${AWS_REGION}", credentials: 'aws-credentials') {
                    sh '''
                        echo "üîê Logging into AWS ECR..."
                        aws ecr get-login-password --region ${AWS_REGION} | \
                        docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
                    '''
                }
            }
        }

        stage('Update Kubernetes Manifests') {
            steps {
                script {
                    GIT_COMMIT = sh(returnStdout: true, script: "git rev-parse --short HEAD").trim()

                    // Replace image tags in YAMLs dynamically
                    sh '''
                    echo "Updating image tags in deployment YAMLs..."
                    sed -i "s|frontend-[a-zA-Z0-9]*|frontend-${GIT_COMMIT}|g" k8s/frontend-deployment.yaml
                    sed -i "s|backend-[a-zA-Z0-9]*|backend-${GIT_COMMIT}|g" k8s/backend-deployment.yaml
                    '''
                }
            }
        }

        stage('Deploy to Minikube') {
            steps {
                script {
                    echo "üöÄ Deploying app to Minikube..."
                    sh '''
                        kubectl apply -f k8s/backend-deployment.yaml -n ${NAMESPACE}
                        kubectl apply -f k8s/frontend-deployment.yaml -n ${NAMESPACE}

                        echo "‚úÖ Deployment successful!"
                        kubectl get pods -n ${NAMESPACE}
                        kubectl get svc -n ${NAMESPACE}
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "üéâ Application successfully deployed on Minikube!"
        }
        failure {
            echo "‚ùå Deployment failed. Check Jenkins logs for details."
        }
    }
}
