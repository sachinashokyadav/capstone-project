pipeline {
    agent any

    environment {
        AWS_ACCOUNT_ID = "688372068524"
        AWS_REGION = "ap-south-1"
        ECR_REPO = "capstoneproject/docker-images"
        KUBE_NAMESPACE = "capstone"
        FRONTEND_TAG = ""
        BACKEND_TAG = ""
        EC2_HOST = "ubuntu@3.110.132.71"   // Replace with your EC2 public IP
        APP_DIR = "/home/ubuntu/capstone-project"
    }

    stages {

        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/sachinashokyadav/capstone-project.git'
            }
        }

        stage('Fetch Image Tags from AWS ECR') {
            steps {
                script {
                    echo "Fetching latest FRONTEND and BACKEND image tags from AWS ECR..."

                    FRONTEND_TAG = sh(
                        script: """
                            aws ecr describe-images \
                                --repository-name ${ECR_REPO} \
                                --region ${AWS_REGION} \
                                --query "sort_by(imageDetails,& imagePushedAt)[*].imageTags[]" \
                                --output text | tr '\\t' '\\n' | grep '^frontend-' | tail -n 1
                        """,
                        returnStdout: true
                    ).trim()

                    BACKEND_TAG = sh(
                        script: """
                            aws ecr describe-images \
                                --repository-name ${ECR_REPO} \
                                --region ${AWS_REGION} \
                                --query "sort_by(imageDetails,& imagePushedAt)[*].imageTags[]" \
                                --output text | tr '\\t' '\\n' | grep '^backend-' | tail -n 1
                        """,
                        returnStdout: true
                    ).trim()

                    echo "✅ Frontend Tag: ${FRONTEND_TAG}"
                    echo "✅ Backend Tag: ${BACKEND_TAG}"
                }
            }
        }

        stage('Update & Deploy on Minikube EC2') {
            steps {
                echo "🚀 Updating manifests and deploying to Minikube on EC2..."
                sshagent(['ec2-ssh-key']) {   // Jenkins SSH key credential ID
                    sh """
                        ssh -o StrictHostKeyChecking=no $EC2_HOST bash -s <<'EOF'
                            set -e
                            export KUBECONFIG=/home/ubuntu/.kube/config
                            APP_DIR=/home/ubuntu/capstone-project

                            echo "📝 Updating image tags in deployment YAMLs..."
                            sed -i "s|image: .*frontend.*|image: 688372068524.dkr.ecr.ap-south-1.amazonaws.com/capstoneproject/docker-images:${FRONTEND_TAG}|g" \$APP_DIR/frontend-deployment.yaml
                            sed -i "s|image: .*backend.*|image: 688372068524.dkr.ecr.ap-south-1.amazonaws.com/capstoneproject/docker-images:${BACKEND_TAG}|g" \$APP_DIR/backend-deployment.yaml

                            echo "🚀 Applying manifests..."
                            kubectl apply -f \$APP_DIR/backend-deployment.yaml -n capstone
                            kubectl apply -f \$APP_DIR/frontend-deployment.yaml -n capstone

                            echo "⏳ Waiting for rollout..."
                            kubectl rollout status deployment/backend-deployment -n capstone || true
                            kubectl rollout status deployment/frontend-deployment -n capstone || true

                            echo "✅ Deployment completed successfully on Minikube EC2!"
                        EOF
                    """
                }
            }
        }
    }

    post {
        success {
            echo "✅ Deployment successful! App deployed using latest scanned images."
        }
        failure {
            echo "❌ Deployment failed. Check Jenkins logs for details."
        }
    }
}
